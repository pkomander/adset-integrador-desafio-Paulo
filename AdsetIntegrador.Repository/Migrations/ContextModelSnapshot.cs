// <auto-generated />
using System;
using AdsetIntegrador.Repository.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdsetIntegrador.Repository.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdsetIntegrador.Domain.Carro", b =>
                {
                    b.Property<int>("CarroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarroId"));

                    b.Property<bool?>("Airbag")
                        .HasColumnType("bit");

                    b.Property<bool?>("Alarme")
                        .HasColumnType("bit");

                    b.Property<string>("Ano")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool?>("ArCondicionado")
                        .HasColumnType("bit");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("FreioABS")
                        .HasColumnType("bit");

                    b.Property<long?>("Km")
                        .HasColumnType("bigint");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CarroId");

                    b.ToTable("Carros");
                });

            modelBuilder.Entity("AdsetIntegrador.Domain.CarroFoto", b =>
                {
                    b.Property<int>("CarroFotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarroFotoId"));

                    b.Property<int>("CarroId")
                        .HasColumnType("int");

                    b.Property<int>("FotoId")
                        .HasColumnType("int");

                    b.HasKey("CarroFotoId");

                    b.HasIndex("CarroId");

                    b.HasIndex("FotoId");

                    b.ToTable("carroFotos");
                });

            modelBuilder.Entity("AdsetIntegrador.Domain.Foto", b =>
                {
                    b.Property<int>("FotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FotoId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FotoId");

                    b.ToTable("Fotos");
                });

            modelBuilder.Entity("AdsetIntegrador.Domain.CarroFoto", b =>
                {
                    b.HasOne("AdsetIntegrador.Domain.Carro", "Carro")
                        .WithMany("CarroFotos")
                        .HasForeignKey("CarroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdsetIntegrador.Domain.Foto", "Foto")
                        .WithMany("CarroFotos")
                        .HasForeignKey("FotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carro");

                    b.Navigation("Foto");
                });

            modelBuilder.Entity("AdsetIntegrador.Domain.Carro", b =>
                {
                    b.Navigation("CarroFotos");
                });

            modelBuilder.Entity("AdsetIntegrador.Domain.Foto", b =>
                {
                    b.Navigation("CarroFotos");
                });
#pragma warning restore 612, 618
        }
    }
}
